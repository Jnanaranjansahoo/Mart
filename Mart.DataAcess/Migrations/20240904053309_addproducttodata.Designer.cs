// <auto-generated />
using System;
using Mart.DataAcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mart.DataAcess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240904053309_addproducttodata")]
    partial class addproducttodata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mart.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Sifi"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Theril"
                        });
                });

            modelBuilder.Entity("Mart.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1111,
                            Name = " Nothing"
                        },
                        new
                        {
                            Id = 1112,
                            Name = " Everything"
                        },
                        new
                        {
                            Id = 1113,
                            Name = " Anything"
                        });
                });

            modelBuilder.Entity("Mart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Description = " Nothing",
                            ImageUrl = "e",
                            Name = " qwer",
                            Price = 300.0
                        },
                        new
                        {
                            Id = 10002,
                            Description = " Nothing",
                            ImageUrl = "r",
                            Name = " asdfr",
                            Price = 300.0
                        },
                        new
                        {
                            Id = 10003,
                            Description = " Nothing",
                            ImageUrl = "d",
                            Name = " €zxc",
                            Price = 300.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
